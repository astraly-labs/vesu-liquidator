---
name: Task - Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      release_tag_name:
        description: "Release tag name"
        type: string
        required: true
      docker_context:
        description: "Docker context"
        type: string
        required: true
      package_name:
        description: "Package name"
        type: string
        required: true
  workflow_call:
    inputs:
      release_tag_name:
        description: "Release tag name"
        type: string
        required: true
      docker_context:
        description: "Docker context"
        type: string
        required: true
      package_name:
        description: "Package name"
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.package_name }}
          tags: |
            type=raw,value=${{ inputs.release_tag_name }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.docker_context }}
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ inputs.package_name }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform == 'linux/amd64' && 'linux-amd64' || 'linux-arm64' }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digests-*
          path: /tmp/digests
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.package_name }}
          tags: |
            type=raw,value=${{ inputs.release_tag_name }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          tags=$(jq -cr '.tags | map("-t " + .) | join(" ")' <<< '${{ steps.meta.outputs.json }}')
          if [[ -z "$tags" ]]; then
            echo "No tags specified, skipping docker buildx imagetools create command"
          else
            docker buildx imagetools create $tags \
              $(printf '${{ inputs.package_name }}@sha256:%s ' *)
          fi

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ inputs.package_name }}:${{ steps.meta.outputs.version }}
